<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="benchmark">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../Applications/eclipse3.4"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="javac.target" value="1.6"/>
    <property name="javac.source" value="1.6"/>

    <!-- *************************************** CONFIGURATION *************************************** -->
    
    <property name="src.dir"                    location="src" />
    <property name="tests.dir"                  location="tests" />
    <property name="lib.dir"                    location="lib" />
    <property name="build.dir"                  location="build" />
    <property name='build.testoutput.dir'       location='${build.dir}/testoutput' />

    <path id='project.classpath'>
        <pathelement location='${build.dir}' />
        <fileset dir='${lib.dir}'>
            <include name='*.jar' />
            <exclude name='ant.jar' />
        </fileset>
        <pathelement path="${java.class.path}"/>
    </path>

    <!-- *************************************** BUILDING *************************************** -->
    
    <target name="build">
        <fileset dir="${src.dir}" excludes="**/*.launch, **/*.java"/>
        <echo message="${ant.project.name}: ${ant.file}"/>
        
        <mkdir dir="${build.dir}"/>
        
        <javac debug="true" debuglevel="${debuglevel}"
               destdir="${build.dir}"
               source="${javac.source}"
               target="${javac.target}">
            <src path="${src.dir}"/>
            <classpath refid="project.classpath" />
        </javac>
        <javac debug="true" debuglevel="${debuglevel}"
               destdir="${build.dir}"
               source="${javac.source}"
               target="${javac.target}">
            <src path="${tests.dir}"/>
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="clean" description="Destroys all generated files and dirs.">
        <delete dir="${build.dir}"/>
    </target>

   <!-- *************************************** TESTING *************************************** -->
    
    <!-- common junit parameters go here -->
    <macrodef name='run_junit'>
        <attribute name='timeout' default='240000' />
        <attribute name='printsummary' default='off' />
        <attribute name='showoutput' default='false' />
        <element name='tests'/>
        <element name='formatters'/>
        
        <sequential>
            <mkdir dir='${build.testoutput.dir}' />
            <junit
                fork="yes"
                haltonfailure="${junit.haltonfailure}"
                failureproperty="junit.failures"
                printsummary="@{printsummary}"
                timeout="@{timeout}"
                maxmemory='1024M'
                showoutput="@{showoutput}"
            >
                <classpath refid='project.classpath' />
                <jvmarg value="-Djava.library.path=${build.dir}/nativelibs" />
                <jvmarg value="-server" />
                <jvmarg value="-Xcheck:jni" />
                <jvmarg value="-Xmx2048m"/>
                <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError"/>
                
                <formatters/>
                <batchtest todir="${build.testoutput.dir}">
                    <tests/>
                </batchtest>
                <assertions><enable/></assertions>
            </junit>
        </sequential>
    </macrodef>
</project>
